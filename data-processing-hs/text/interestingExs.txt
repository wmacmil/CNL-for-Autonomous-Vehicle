You_PRP 'll_MD know_VB you_PRP 're_VBP close_JJ when_WRB you_PRP see_VBP a_DT parking_NN lot_NN on_IN either_DT side_NN of_IN you_PRP ._.
147

spatio-temporal logic more expressive (a distinction being the visibility of something versus the relative position on a grid) frame for w
close is also relative to the distance of the trip

([] parkinglotoneitherside) -> isClose

How to interpret "you see" 


<> 
Go_VB down_RB to_IN the_DT next_JJ intersection_NN and_CC turn_VB left_RB ._.

There_EX 's_VBZ orange_NN and_CC white_JJ barriers_NNS ahead_RB ,_, if_IN you_PRP get_VBP to_IN them_PRP ,_, you_PRP 've_VBP gone_VBN too_RB far_RB ._.

dealing with anaphora and coreference resolution, like any other NLP task

<> whiteBarriers -> <> too_far


[] curve_in_road  

ambiguity which can only be resolved by looking at the image : we don't know when a state has been left purely by the utterances
curve_in_road Until merging 

Follow_VB the_DT curve_NN in_IN this_DT road_NN to_IN the_DT left_NN ,_, as_IN if_IN you_PRP 're_VBP going_VBG around_RB to_IN the_DT other_JJ side_NN of_IN the_DT park_NN ._.

Immediately_RB after_IN merging_VBG with_IN a_DT lane_NN on_IN the_DT right_NN ,_, look_VB to_IN your_PRP$ right_NN ._.

We also need to take into account multiple sentences - the fact that a modal formula may extend beyond just one sentence


Temporal logic motion planning for dynamic robots
prop temp logic over the reals
Visit area [[π2]], then area
[[π3 ]], then area [[π4 ]] and, finally, return to and stay in region [[π1 ]]
while avoiding areas [[π2]] and [[π3]]’

Also, it is implied that the
robot should always remain inside the free workspace X , i.e., re-
gion [[π0 ]], and that X0 = [[π1]].


ψ1 = []π0 ∧ <>(π2 ∧ <>(π3 ∧ <>(π4 ∧ (¬π2 ∧ ¬π3 )U[]π1 ))).

switch lanes now

we generally want a nested series of formulas

We assume a position (current place, or state) direction (where the car is headed) 

no south, north, ... in data set
-- very short term insturctions, 

a lot of infomration, hidden latently in the variables, that should be expressible perhaps by formulas in different logics (speed, direction, distance)

turn (now vs later)

turn after the * ....

<> ( * ^ <> ( 

change of direction (turn right) is a control for the wheel

p "drive to the store , turn right and stop at the dog"
 F (store ∧ (X turn_right ∧ (F (G dog)))),

orient should maybe be a function taking an argument (i.e. its a verb which describes a different kind of state, a position state not a direction state)

straight is assumed


proceed == go

Next : see if we can get our grammar to parse this, so that we can actuall begin defining a formal semantics

Orient yourself with parked cars, proceed, and turn right at the light. Turn right at the next light. Go straight at the stop sign then turn right at the light. Stop when you would be outside a cosmic smiley face painted on the right sidewalk buildings. Finish.


X orient(parked_cars) /\ F (light ^ (X turn_right ^ F (stop-sign ^ F ( light  ^ X turn_right ^ F (G outside-cosmic_smiley... )))))


 Align yourself with the flow of traffic. Go straight ignoring the turn. Five staps forward, you should see a garbage truck on your left, and a store with a yellow and red sign. Finish.


